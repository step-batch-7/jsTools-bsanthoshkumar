sample.txt:-
  1,2,3,4,5
  11,12,13,14,15
  21,22,23,24,25
  31,32,33,34,35
  41,42,43,44,45

===first flow===
example:
input ==> cut -d " " -f 2,5 sample.txt
output ==> 
2,5
12,15
22,25
32,35
42,45

[1.1] The last step
output => text: joinedLines
  "2,5\n12,15\n22,25\n32,35\n42,45"
input => array of strings: extractedLines
  ["2,5","12,15","22,25","32,35","42,45"]
name => parseExtractedLines

[1.2] The previous step
output => array of strings: extractedLines
  ["2,5","12,15","22,25","32,35","42,45"]
input => array of strings :fileContent
  ["1,2,3,4,5","11,12,13,14,15","21,22,23,24,25", "31,32,33,34,35","41,42,43,44,45"],
  { "fields" : [3,5],"delimiter" : ","}
name => extractFileContent

[1.3.1]
(A).
output => array of strings :fileContent
  ["1,2,3,4,5","11,12,13,14,15","21,22,23,24,25", "31,32,33,34,35","41,42,43,44,45"]
input => string : filePath
  "sample.txt"
name => readFileContent

(B).
output =>text : message
   "No such file or directory"
input => array of strings :commandLineArgs
    "sample.txt"
name => readFileContent

[1.3.2]
output => array of strings : standardInput
  ["1,2,3,4,5","11,12,13,14,15","21,22,23,24,25", "31,32,33,34,35","41,42,43,44,45"]
input => string : filePath
  "sample.txt"
name => readStandardInput

[1.4] The first step
output => object : userOptions 
  {filename : "./goodFile.js", "fields" : [3,5],"delimiter" : ","}
input => array of strings: commandLineArgs
  ["node","./cut.js","-f","3,5","-d",",","./sample.txt"]
name => ParseCmdLineArgs